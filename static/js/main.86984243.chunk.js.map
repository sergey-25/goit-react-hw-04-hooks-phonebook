{"version":3,"sources":["components/Container/Container.styled.js","components/Container/Container.js","components/ContactForm/ContactsForm.styled.js","components/ContactForm/ContactForm.js","components/Contacts/ContactsList.styled.js","components/Contacts/ContactList.js","components/Section/Section.styled.js","components/Section/Section.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","App.js","reportWebVitals.js","index.js"],"names":["StyledWrapper","Container","children","Form","Input","Label","Button","ContactsForm","onSubmit","useState","name","setName","number","setNumber","handleChange","event","target","value","nameInputId","nanoid","telInputId","preventDefault","htmlFor","id","type","placeholder","pattern","title","onChange","required","propTypes","PropTypes","string","isRequired","func","Contacts","Item","ContactsList","contacts","onDeleteClick","map","size","color","onClick","Wrapper","Title","Section","Filter","filter","App","setContacts","setFilter","useEffect","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","filtered","normalizeFilter","toLowerCase","contact","includes","filteredContacts","newContact","some","alert","contactId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.86984243.chunk.js","sourcesContent":["import styled from \"@emotion/styled/macro\";\r\n\r\nexport const StyledWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 0 auto;\r\n  padding: 30px;\r\n  background-color: #ffffff;\r\n  border-radius: 5px;\r\n  \r\n  width: 400px;\r\n`;","import PropTypes from \"prop-types\";\r\nimport { StyledWrapper } from \"./Container.styled\";\r\n\r\nexport const Container = ({ children }) => {\r\n  return <StyledWrapper>{children}</StyledWrapper>;\r\n};\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};","import styled from \"@emotion/styled/macro\";\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Input = styled.input``;\r\n\r\nexport const Label = styled.label`\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-width: 100px;\r\n  padding: 10px 12px;\r\n  margin-top: 15px;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  color: #fff;\r\n  background-color: #651fff;\r\n  border: 1px solid transparent;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  text-transform: capitalize;\r\n  &:hover,\r\n  &:focus {\r\n    box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.5);\r\n  }\r\n`;","import { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { nanoid } from \"nanoid\";\r\nimport { Form, Input, Label, Button } from \"./ContactsForm.styled\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nexport function ContactsForm({ onSubmit }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    onSubmit({ name, number });\r\n\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  let nameInputId = nanoid(3);\r\n  let telInputId = nanoid(3);\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Label htmlFor={`id-${nameInputId}`}>Name</Label>\r\n      <Input\r\n        id={`id-${nameInputId}`}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        placeholder=\"Name\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        value={name}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n\r\n      <Label htmlFor={`id-${telInputId}`}>Number</Label>\r\n      <Input\r\n        id={`id-${telInputId}`}\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        placeholder=\"+38 (XXX) XXX-XX-XX\"\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n        value={number}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n\r\n      <Button type=\"submit\"><AddIcon />Add contact</Button>\r\n    </Form>\r\n  );\r\n}\r\n\r\nContactsForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nInput.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};","import styled from \"@emotion/styled/macro\";\r\n\r\nexport const Contacts = styled.ul`\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width:300px;\r\n  padding: 10px;\r\n  \r\n  overflow: hidden;\r\n  border-radius: 5px;\r\n  &:not(:last-child) {\r\n    margin-bottom: 10px;\r\n  }\r\n  & span {\r\n    // display: inline-flex;\r\n    // align-items: center;\r\n    // margin-left: 10px;\r\n    // margin-right: 40px;\r\n  }\r\n  & svg {\r\n    margin-right: 5px;\r\n  }\r\n  & div{\r\n    display:flex;\r\n     flex-direction:column;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-width: 100px;\r\n  padding: 10px;\r\n  margin-left: 10px;\r\n  margin-right: 10px;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  color: #fff;\r\n  background-color: red;\r\n  border: 1px solid transparent;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  text-transform: capitalize;\r\n  &:hover,\r\n  &:focus {\r\n    box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.5);\r\n  }\r\n`;","import PropTypes from \"prop-types\";\r\nimport { Contacts, Item, Button } from \"./ContactsList.styled\";\r\nimport { IoPerson } from \"react-icons/io5\";\r\nimport { ImPhone } from \"react-icons/im\";\r\n\r\n\r\nexport const ContactsList = ({ contacts, onDeleteClick }) => {\r\n  return (\r\n    <Contacts>\r\n      {contacts.map(({ id, name, number }) => {\r\n        return (\r\n          <Item key={id}>\r\n            <div >\r\n               <span>\r\n              <IoPerson size={14} color=\"steelblue\" />\r\n              {name}:\r\n            </span>\r\n\r\n            <span>\r\n              <ImPhone size={14} color=\"steelblue\" />\r\n              {number}\r\n            </span>\r\n           </div>\r\n            <Button type=\"button\" onClick={() => onDeleteClick(id)}>\r\n              Delete\r\n            </Button>\r\n          </Item>\r\n        );\r\n      })}\r\n    </Contacts>\r\n  );\r\n};\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)).isRequired,\r\n  onDeleteClick: PropTypes.func.isRequired,\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import styled from \"@emotion/styled/macro\";\r\n\r\nexport const Wrapper = styled.section`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding-top: 30px;\r\n  padding-bottom: 30px;\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-bottom: 20px;\r\n  text-transform: uppercase;\r\n  font-size: 28px;\r\n  font-weight: 700;\r\n  color: black;\r\n`;","import PropTypes from \"prop-types\";\r\nimport { Wrapper, Title } from \"./Section.styled\";\r\n\r\nexport const Section = ({ title, children }) => {\r\n  return (\r\n    <Wrapper>\r\n      <Title>{title}</Title>\r\n      {children}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};","import styled from \"@emotion/styled/macro\";\r\n\r\nexport const Label = styled.label`\r\n  margin-bottom: 10px;\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n`;\r\n\r\nexport const Input = styled.input``;\r\n","import PropTypes from \"prop-types\";\r\nimport { nanoid } from \"nanoid\";\r\nimport { Label, Input } from \"./Filter.styled\";\r\n\r\nexport const Filter = ({ filter, onChange }) => {\r\n  return (\r\n    <>\r\n      <Label htmlFor={`id-${nanoid(3)}`}>Find contacts by name</Label>\r\n      <Input\r\n        id={`id-${nanoid(3)}`}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={filter}\r\n        onChange={onChange}\r\n        placeholder=\"Search\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};","import { useState, useEffect } from \"react\";\r\nimport { Container } from \"./components/Container/Container\";\r\nimport { ContactsForm } from \"./components/ContactForm/ContactForm\";\r\nimport { ContactsList } from \"./components/Contacts/ContactList\";\r\nimport { Section } from \"./components/Section/Section\";\r\nimport { Filter } from \"./components/Filter/Filter\";\r\n\r\nexport default function App() {\r\n  const [contacts, setContacts] = useState([\r\n    { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n    { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n    { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n    { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n  ]);\r\n\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const contacts = localStorage.getItem(\"contacts\");\r\n    const parsedContacts = JSON.parse(contacts);\r\n\r\n    if (parsedContacts) {\r\n      setContacts(parsedContacts);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  const addContact = (newContact) => {\r\n    contacts.some(({ name }) => name === newContact.name)\r\n      ? alert(`Contact ${newContact.name} already exists`)\r\n      : setContacts([newContact, ...contacts]);\r\n  };\r\n\r\n  const deleteContact = (contactId) => {\r\n    setContacts((contacts) =>\r\n      contacts.filter((contact) => contact.id !== contactId)\r\n    );\r\n  };\r\n\r\n  const handleFilterChange = (event) => setFilter(event.target.value);\r\n\r\n  const filteredContacts = () => {\r\n    const normalizeFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(\r\n      (contact) =>\r\n        contact.name.toLowerCase().includes(normalizeFilter) ||\r\n        contact.number.includes(normalizeFilter)\r\n    );\r\n  };\r\n\r\n  const filtered = filteredContacts();\r\n\r\n  return (\r\n    <Container>\r\n      <Section title=\"Phonebook\">\r\n        <ContactsForm onSubmit={addContact} />\r\n      </Section>\r\n\r\n      <Section title=\"Contacts\">\r\n        <Filter value={filter} onChange={handleFilterChange} />\r\n        <ContactsList contacts={filtered} onDeleteClick={deleteContact} />\r\n      </Section>\r\n    </Container>\r\n  );\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}